@*
CD-US-2.2 Forgot my password - Core Dummpers

Collaborators:
- Álvaro Miranda
- Nathan Miranda
- Mariana Murillo
- Emmanuel Zúñiga

This Blazor page displays a form that allows the user to reset their password and then store it in de DB.
*@
@page "/reset-password/{entered_hash_email}"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Application.Users
@using Application.Users.Implementations
@using Domain.Core.Exceptions
@using Domain.Core.Helpers
@using Domain.Core.ValueObjects
@using Domain.Users.Repositories
@using Domain.Users.Entities
@using Presentation.Core.Components
@using Presentation.Core.Layout
@using Presentation.Users.Models
@using Presentation.Users.Components

@inject IUserRepository UserRepository
@inject NavigationManager NavManager
@inject ISnackbar Snackbar

<MudGrid Justify="Justify.Center" Class="mt-16 d-flex align-center justify-center">
    <MudItem xs="5" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">


                <!--    tittle  -->
                <MudText Class="pa-10" Style= "font-size:2rem;">Contraseña nueva</MudText>

                <!--password input child component-->
                <PasswordInput OnValidSubmit="HandlePassword_input"/>

                <!--confirmtation button-->
                <div class="d-flex align-center justify-space-between mt-6 pb-10">
                        <MudButton Variant="Variant.Filled" @onclick="HandlePasswordSubmit" Disabled="@(!success)" Class="ml-auto blue darken-1 text-white">Cambiar contraseña</MudButton>
                </div>

                <MudNavLink Href="/recover-password">Regresar</MudNavLink>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool success;
    string[] errors = { };
    MudForm form;
    [Parameter]
    public string? entered_hash_email { get; set; }
    string _message = "";
    User? _user;

    /// <summary>
    /// get the user from the db via email
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        _user = await UserRepository.GetUserByHashedEmail(entered_hash_email);
    }

    /// <summary>
    /// hanldes the password input
    /// </summary>
    /// <param name="password"></param>
    private void HandlePassword_input(string password)
    {
        if (password != null && _user != null)
        {
            _user.Password = password;
        }
    }

    // Updates the password and lets the user know that their new password has been stored.
    private async void HandlePasswordSubmit()
    {
        await UserRepository.UpdateUser(_user);
        _message = "Tu contraseña ha sido actualizada.";
        Snackbar.Add(_message, Severity.Success);
        string link = "/LoginPage";
        NavManager.NavigateTo(link);
    }
}
